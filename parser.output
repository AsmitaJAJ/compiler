Terminals unused in grammar

    PROGRAM
    PROCEDURE
    PRINTFF
    INCLUDE
    THEN
    OR
    NOT
    AND
    END
    OF
    ARRAY
    BEGIN_SYM
    END_SYM
    ADDOP
    MULOP
    LBRACKET
    RBRACKET
    COMMA


State 15 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: function_declaration

    2 function_declaration: FUNCTION IDENTIFIER LPAREN parameter_list RPAREN LCURLBRACKET statement_list RCURLBRACKET

    3 parameter_list: %empty
    4               | INTEGER IDENTIFIER
    5               | VAR IDENTIFIER
    6               | parameter_list SEMICOLON parameter_list

    7 statement_list: %empty
    8               | declaration_statement statement_list
    9               | assignment_statement statement_list
   10               | IF LPAREN expression RPAREN LCURLBRACKET statement_list RCURLBRACKET ELSE LCURLBRACKET statement_list RCURLBRACKET
   11               | WHILE LPAREN expression RPAREN DO LCURLBRACKET statement_list RCURLBRACKET
   12               | FOR LPAREN expression RPAREN LCURLBRACKET statement_list RCURLBRACKET
   13               | READ IDENTIFIER SEMICOLON statement_list
   14               | WRITE expression SEMICOLON statement_list

   15 declaration_statement: INTEGER IDENTIFIER SEMICOLON
   16                      | VAR IDENTIFIER SEMICOLON

   17 assignment_statement: IDENTIFIER ASSIGNOP expression SEMICOLON

   18 expression: NUMBER
   19           | STRING
   20           | IDENTIFIER
   21           | IDENTIFIER RELOP NUMBER
   22           | IDENTIFIER RELOP STRING
   23           | IDENTIFIER RELOP IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PROGRAM (258)
    FUNCTION (259) 2
    PROCEDURE (260)
    PRINTFF (261)
    INCLUDE (262)
    IF (263) 10
    ELSE (264) 10
    THEN (265)
    DO (266) 11
    WHILE (267) 11
    OR (268)
    NOT (269)
    AND (270)
    END (271)
    OF (272)
    FOR (273) 12
    INTEGER (274) 4 15
    VAR (275) 5 16
    ARRAY (276)
    READ (277) 13
    WRITE (278) 14
    BEGIN_SYM (279)
    END_SYM (280)
    IDENTIFIER <str> (281) 2 4 5 13 15 16 17 20 21 22 23
    STRING <str> (282) 19 22
    RELOP <str> (283) 21 22 23
    NUMBER <num> (284) 18 21
    ASSIGNOP (285) 17
    ADDOP (286)
    MULOP (287)
    LPAREN (288) 2 10 11 12
    RPAREN (289) 2 10 11 12
    LBRACKET (290)
    RBRACKET (291)
    LCURLBRACKET (292) 2 10 11 12
    RCURLBRACKET (293) 2 10 11 12
    COMMA (294)
    SEMICOLON (295) 6 13 14 15 16 17


Nonterminals, with rules where they appear

    $accept (41)
        on left: 0
    program (42)
        on left: 1
        on right: 0
    function_declaration (43)
        on left: 2
        on right: 1
    parameter_list (44)
        on left: 3 4 5 6
        on right: 2 6
    statement_list (45)
        on left: 7 8 9 10 11 12 13 14
        on right: 2 8 9 10 11 12 13 14
    declaration_statement (46)
        on left: 15 16
        on right: 8
    assignment_statement (47)
        on left: 17
        on right: 9
    expression <str> (48)
        on left: 18 19 20 21 22 23
        on right: 10 11 12 14 17


State 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    program               go to state 2
    function_declaration  go to state 3


State 1

    2 function_declaration: FUNCTION . IDENTIFIER LPAREN parameter_list RPAREN LCURLBRACKET statement_list RCURLBRACKET

    IDENTIFIER  shift, and go to state 4


State 2

    0 $accept: program . $end

    $end  shift, and go to state 5


State 3

    1 program: function_declaration .

    $default  reduce using rule 1 (program)


State 4

    2 function_declaration: FUNCTION IDENTIFIER . LPAREN parameter_list RPAREN LCURLBRACKET statement_list RCURLBRACKET

    LPAREN  shift, and go to state 6


State 5

    0 $accept: program $end .

    $default  accept


State 6

    2 function_declaration: FUNCTION IDENTIFIER LPAREN . parameter_list RPAREN LCURLBRACKET statement_list RCURLBRACKET

    INTEGER  shift, and go to state 7
    VAR      shift, and go to state 8

    $default  reduce using rule 3 (parameter_list)

    parameter_list  go to state 9


State 7

    4 parameter_list: INTEGER . IDENTIFIER

    IDENTIFIER  shift, and go to state 10


State 8

    5 parameter_list: VAR . IDENTIFIER

    IDENTIFIER  shift, and go to state 11


State 9

    2 function_declaration: FUNCTION IDENTIFIER LPAREN parameter_list . RPAREN LCURLBRACKET statement_list RCURLBRACKET
    6 parameter_list: parameter_list . SEMICOLON parameter_list

    RPAREN     shift, and go to state 12
    SEMICOLON  shift, and go to state 13


State 10

    4 parameter_list: INTEGER IDENTIFIER .

    $default  reduce using rule 4 (parameter_list)


State 11

    5 parameter_list: VAR IDENTIFIER .

    $default  reduce using rule 5 (parameter_list)


State 12

    2 function_declaration: FUNCTION IDENTIFIER LPAREN parameter_list RPAREN . LCURLBRACKET statement_list RCURLBRACKET

    LCURLBRACKET  shift, and go to state 14


State 13

    6 parameter_list: parameter_list SEMICOLON . parameter_list

    INTEGER  shift, and go to state 7
    VAR      shift, and go to state 8

    $default  reduce using rule 3 (parameter_list)

    parameter_list  go to state 15


State 14

    2 function_declaration: FUNCTION IDENTIFIER LPAREN parameter_list RPAREN LCURLBRACKET . statement_list RCURLBRACKET

    IF          shift, and go to state 16
    WHILE       shift, and go to state 17
    FOR         shift, and go to state 18
    INTEGER     shift, and go to state 19
    VAR         shift, and go to state 20
    READ        shift, and go to state 21
    WRITE       shift, and go to state 22
    IDENTIFIER  shift, and go to state 23

    $default  reduce using rule 7 (statement_list)

    statement_list         go to state 24
    declaration_statement  go to state 25
    assignment_statement   go to state 26


State 15

    6 parameter_list: parameter_list . SEMICOLON parameter_list
    6               | parameter_list SEMICOLON parameter_list .

    SEMICOLON  shift, and go to state 13

    SEMICOLON  [reduce using rule 6 (parameter_list)]
    $default   reduce using rule 6 (parameter_list)


State 16

   10 statement_list: IF . LPAREN expression RPAREN LCURLBRACKET statement_list RCURLBRACKET ELSE LCURLBRACKET statement_list RCURLBRACKET

    LPAREN  shift, and go to state 27


State 17

   11 statement_list: WHILE . LPAREN expression RPAREN DO LCURLBRACKET statement_list RCURLBRACKET

    LPAREN  shift, and go to state 28


State 18

   12 statement_list: FOR . LPAREN expression RPAREN LCURLBRACKET statement_list RCURLBRACKET

    LPAREN  shift, and go to state 29


State 19

   15 declaration_statement: INTEGER . IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 30


State 20

   16 declaration_statement: VAR . IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 31


State 21

   13 statement_list: READ . IDENTIFIER SEMICOLON statement_list

    IDENTIFIER  shift, and go to state 32


State 22

   14 statement_list: WRITE . expression SEMICOLON statement_list

    IDENTIFIER  shift, and go to state 33
    STRING      shift, and go to state 34
    NUMBER      shift, and go to state 35

    expression  go to state 36


State 23

   17 assignment_statement: IDENTIFIER . ASSIGNOP expression SEMICOLON

    ASSIGNOP  shift, and go to state 37


State 24

    2 function_declaration: FUNCTION IDENTIFIER LPAREN parameter_list RPAREN LCURLBRACKET statement_list . RCURLBRACKET

    RCURLBRACKET  shift, and go to state 38


State 25

    8 statement_list: declaration_statement . statement_list

    IF          shift, and go to state 16
    WHILE       shift, and go to state 17
    FOR         shift, and go to state 18
    INTEGER     shift, and go to state 19
    VAR         shift, and go to state 20
    READ        shift, and go to state 21
    WRITE       shift, and go to state 22
    IDENTIFIER  shift, and go to state 23

    $default  reduce using rule 7 (statement_list)

    statement_list         go to state 39
    declaration_statement  go to state 25
    assignment_statement   go to state 26


State 26

    9 statement_list: assignment_statement . statement_list

    IF          shift, and go to state 16
    WHILE       shift, and go to state 17
    FOR         shift, and go to state 18
    INTEGER     shift, and go to state 19
    VAR         shift, and go to state 20
    READ        shift, and go to state 21
    WRITE       shift, and go to state 22
    IDENTIFIER  shift, and go to state 23

    $default  reduce using rule 7 (statement_list)

    statement_list         go to state 40
    declaration_statement  go to state 25
    assignment_statement   go to state 26


State 27

   10 statement_list: IF LPAREN . expression RPAREN LCURLBRACKET statement_list RCURLBRACKET ELSE LCURLBRACKET statement_list RCURLBRACKET

    IDENTIFIER  shift, and go to state 33
    STRING      shift, and go to state 34
    NUMBER      shift, and go to state 35

    expression  go to state 41


State 28

   11 statement_list: WHILE LPAREN . expression RPAREN DO LCURLBRACKET statement_list RCURLBRACKET

    IDENTIFIER  shift, and go to state 33
    STRING      shift, and go to state 34
    NUMBER      shift, and go to state 35

    expression  go to state 42


State 29

   12 statement_list: FOR LPAREN . expression RPAREN LCURLBRACKET statement_list RCURLBRACKET

    IDENTIFIER  shift, and go to state 33
    STRING      shift, and go to state 34
    NUMBER      shift, and go to state 35

    expression  go to state 43


State 30

   15 declaration_statement: INTEGER IDENTIFIER . SEMICOLON

    SEMICOLON  shift, and go to state 44


State 31

   16 declaration_statement: VAR IDENTIFIER . SEMICOLON

    SEMICOLON  shift, and go to state 45


State 32

   13 statement_list: READ IDENTIFIER . SEMICOLON statement_list

    SEMICOLON  shift, and go to state 46


State 33

   20 expression: IDENTIFIER .
   21           | IDENTIFIER . RELOP NUMBER
   22           | IDENTIFIER . RELOP STRING
   23           | IDENTIFIER . RELOP IDENTIFIER

    RELOP  shift, and go to state 47

    $default  reduce using rule 20 (expression)


State 34

   19 expression: STRING .

    $default  reduce using rule 19 (expression)


State 35

   18 expression: NUMBER .

    $default  reduce using rule 18 (expression)


State 36

   14 statement_list: WRITE expression . SEMICOLON statement_list

    SEMICOLON  shift, and go to state 48


State 37

   17 assignment_statement: IDENTIFIER ASSIGNOP . expression SEMICOLON

    IDENTIFIER  shift, and go to state 33
    STRING      shift, and go to state 34
    NUMBER      shift, and go to state 35

    expression  go to state 49


State 38

    2 function_declaration: FUNCTION IDENTIFIER LPAREN parameter_list RPAREN LCURLBRACKET statement_list RCURLBRACKET .

    $default  reduce using rule 2 (function_declaration)


State 39

    8 statement_list: declaration_statement statement_list .

    $default  reduce using rule 8 (statement_list)


State 40

    9 statement_list: assignment_statement statement_list .

    $default  reduce using rule 9 (statement_list)


State 41

   10 statement_list: IF LPAREN expression . RPAREN LCURLBRACKET statement_list RCURLBRACKET ELSE LCURLBRACKET statement_list RCURLBRACKET

    RPAREN  shift, and go to state 50


State 42

   11 statement_list: WHILE LPAREN expression . RPAREN DO LCURLBRACKET statement_list RCURLBRACKET

    RPAREN  shift, and go to state 51


State 43

   12 statement_list: FOR LPAREN expression . RPAREN LCURLBRACKET statement_list RCURLBRACKET

    RPAREN  shift, and go to state 52


State 44

   15 declaration_statement: INTEGER IDENTIFIER SEMICOLON .

    $default  reduce using rule 15 (declaration_statement)


State 45

   16 declaration_statement: VAR IDENTIFIER SEMICOLON .

    $default  reduce using rule 16 (declaration_statement)


State 46

   13 statement_list: READ IDENTIFIER SEMICOLON . statement_list

    IF          shift, and go to state 16
    WHILE       shift, and go to state 17
    FOR         shift, and go to state 18
    INTEGER     shift, and go to state 19
    VAR         shift, and go to state 20
    READ        shift, and go to state 21
    WRITE       shift, and go to state 22
    IDENTIFIER  shift, and go to state 23

    $default  reduce using rule 7 (statement_list)

    statement_list         go to state 53
    declaration_statement  go to state 25
    assignment_statement   go to state 26


State 47

   21 expression: IDENTIFIER RELOP . NUMBER
   22           | IDENTIFIER RELOP . STRING
   23           | IDENTIFIER RELOP . IDENTIFIER

    IDENTIFIER  shift, and go to state 54
    STRING      shift, and go to state 55
    NUMBER      shift, and go to state 56


State 48

   14 statement_list: WRITE expression SEMICOLON . statement_list

    IF          shift, and go to state 16
    WHILE       shift, and go to state 17
    FOR         shift, and go to state 18
    INTEGER     shift, and go to state 19
    VAR         shift, and go to state 20
    READ        shift, and go to state 21
    WRITE       shift, and go to state 22
    IDENTIFIER  shift, and go to state 23

    $default  reduce using rule 7 (statement_list)

    statement_list         go to state 57
    declaration_statement  go to state 25
    assignment_statement   go to state 26


State 49

   17 assignment_statement: IDENTIFIER ASSIGNOP expression . SEMICOLON

    SEMICOLON  shift, and go to state 58


State 50

   10 statement_list: IF LPAREN expression RPAREN . LCURLBRACKET statement_list RCURLBRACKET ELSE LCURLBRACKET statement_list RCURLBRACKET

    LCURLBRACKET  shift, and go to state 59


State 51

   11 statement_list: WHILE LPAREN expression RPAREN . DO LCURLBRACKET statement_list RCURLBRACKET

    DO  shift, and go to state 60


State 52

   12 statement_list: FOR LPAREN expression RPAREN . LCURLBRACKET statement_list RCURLBRACKET

    LCURLBRACKET  shift, and go to state 61


State 53

   13 statement_list: READ IDENTIFIER SEMICOLON statement_list .

    $default  reduce using rule 13 (statement_list)


State 54

   23 expression: IDENTIFIER RELOP IDENTIFIER .

    $default  reduce using rule 23 (expression)


State 55

   22 expression: IDENTIFIER RELOP STRING .

    $default  reduce using rule 22 (expression)


State 56

   21 expression: IDENTIFIER RELOP NUMBER .

    $default  reduce using rule 21 (expression)


State 57

   14 statement_list: WRITE expression SEMICOLON statement_list .

    $default  reduce using rule 14 (statement_list)


State 58

   17 assignment_statement: IDENTIFIER ASSIGNOP expression SEMICOLON .

    $default  reduce using rule 17 (assignment_statement)


State 59

   10 statement_list: IF LPAREN expression RPAREN LCURLBRACKET . statement_list RCURLBRACKET ELSE LCURLBRACKET statement_list RCURLBRACKET

    IF          shift, and go to state 16
    WHILE       shift, and go to state 17
    FOR         shift, and go to state 18
    INTEGER     shift, and go to state 19
    VAR         shift, and go to state 20
    READ        shift, and go to state 21
    WRITE       shift, and go to state 22
    IDENTIFIER  shift, and go to state 23

    $default  reduce using rule 7 (statement_list)

    statement_list         go to state 62
    declaration_statement  go to state 25
    assignment_statement   go to state 26


State 60

   11 statement_list: WHILE LPAREN expression RPAREN DO . LCURLBRACKET statement_list RCURLBRACKET

    LCURLBRACKET  shift, and go to state 63


State 61

   12 statement_list: FOR LPAREN expression RPAREN LCURLBRACKET . statement_list RCURLBRACKET

    IF          shift, and go to state 16
    WHILE       shift, and go to state 17
    FOR         shift, and go to state 18
    INTEGER     shift, and go to state 19
    VAR         shift, and go to state 20
    READ        shift, and go to state 21
    WRITE       shift, and go to state 22
    IDENTIFIER  shift, and go to state 23

    $default  reduce using rule 7 (statement_list)

    statement_list         go to state 64
    declaration_statement  go to state 25
    assignment_statement   go to state 26


State 62

   10 statement_list: IF LPAREN expression RPAREN LCURLBRACKET statement_list . RCURLBRACKET ELSE LCURLBRACKET statement_list RCURLBRACKET

    RCURLBRACKET  shift, and go to state 65


State 63

   11 statement_list: WHILE LPAREN expression RPAREN DO LCURLBRACKET . statement_list RCURLBRACKET

    IF          shift, and go to state 16
    WHILE       shift, and go to state 17
    FOR         shift, and go to state 18
    INTEGER     shift, and go to state 19
    VAR         shift, and go to state 20
    READ        shift, and go to state 21
    WRITE       shift, and go to state 22
    IDENTIFIER  shift, and go to state 23

    $default  reduce using rule 7 (statement_list)

    statement_list         go to state 66
    declaration_statement  go to state 25
    assignment_statement   go to state 26


State 64

   12 statement_list: FOR LPAREN expression RPAREN LCURLBRACKET statement_list . RCURLBRACKET

    RCURLBRACKET  shift, and go to state 67


State 65

   10 statement_list: IF LPAREN expression RPAREN LCURLBRACKET statement_list RCURLBRACKET . ELSE LCURLBRACKET statement_list RCURLBRACKET

    ELSE  shift, and go to state 68


State 66

   11 statement_list: WHILE LPAREN expression RPAREN DO LCURLBRACKET statement_list . RCURLBRACKET

    RCURLBRACKET  shift, and go to state 69


State 67

   12 statement_list: FOR LPAREN expression RPAREN LCURLBRACKET statement_list RCURLBRACKET .

    $default  reduce using rule 12 (statement_list)


State 68

   10 statement_list: IF LPAREN expression RPAREN LCURLBRACKET statement_list RCURLBRACKET ELSE . LCURLBRACKET statement_list RCURLBRACKET

    LCURLBRACKET  shift, and go to state 70


State 69

   11 statement_list: WHILE LPAREN expression RPAREN DO LCURLBRACKET statement_list RCURLBRACKET .

    $default  reduce using rule 11 (statement_list)


State 70

   10 statement_list: IF LPAREN expression RPAREN LCURLBRACKET statement_list RCURLBRACKET ELSE LCURLBRACKET . statement_list RCURLBRACKET

    IF          shift, and go to state 16
    WHILE       shift, and go to state 17
    FOR         shift, and go to state 18
    INTEGER     shift, and go to state 19
    VAR         shift, and go to state 20
    READ        shift, and go to state 21
    WRITE       shift, and go to state 22
    IDENTIFIER  shift, and go to state 23

    $default  reduce using rule 7 (statement_list)

    statement_list         go to state 71
    declaration_statement  go to state 25
    assignment_statement   go to state 26


State 71

   10 statement_list: IF LPAREN expression RPAREN LCURLBRACKET statement_list RCURLBRACKET ELSE LCURLBRACKET statement_list . RCURLBRACKET

    RCURLBRACKET  shift, and go to state 72


State 72

   10 statement_list: IF LPAREN expression RPAREN LCURLBRACKET statement_list RCURLBRACKET ELSE LCURLBRACKET statement_list RCURLBRACKET .

    $default  reduce using rule 10 (statement_list)
